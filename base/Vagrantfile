# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'json'

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  environment_file = File.read('./vagrant-config/environment.json')
  environment = JSON.parse(environment_file)

  env_contents = "#!/usr/bin/env bash\n\n"

  environment.each do |key, value|
    if value.to_s == "true" or value.to_s == "false"
      real_value = value.to_s
    else
      real_value = "\"" + value.to_s + "\""
    end

    env_contents += key + "=" + real_value + "\n"
  end

  env_file = './vagrant-config/environment.sh'

  File.open(env_file, 'w') { |file| file.write(env_contents) }

  config.vm.box = "ubuntu/focal64"
  config.ssh.insert_key = true

  config.vm.provider :virtualbox do |vb|
    vb.gui = false
    vb.cpus = 2
    vb.memory = "2048"
    vb.linked_clone = true
  end

  config.vm.network "private_network", ip: environment['IP_ADDRESS']

  config.vm.hostname = environment['HOSTNAME']

  config.hostsupdater.remove_on_suspend = true

  config.trigger.before :destroy do |trigger|
    trigger.info = "Dumping the DB before destroying the VM..."
    trigger.run_remote = {inline: "bash /vagrant/vagrant-wordpress/mysql/db_dump.sh"}
  end

  provisioning_file = './vagrant-wordpress/provisioning'

  if (File.file?(provisioning_file))
    config.vm.provision "shell" do |s|
      s.path = provisioning_file
    end
  end
end
